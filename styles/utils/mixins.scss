/*
  (TEXT) PARAMS
  =================
  1. Namespace
  2. Intensity
  4. Background color (flat)
  5. Highlight #1 color
  6. Highlight #2 color
  7. Width (px)
  8. Height (px)
*/
@mixin textGlitch($steps, $offset) {
  position: relative;

  &::before,
  &::after {
    content: attr(data-text);
    position: absolute;
    text-align: center;
    overflow: hidden;
    right: 0;
    background: $color-white;
  }

  &::before {
    left: -$offset;
    animation: noise-anim-2 3s infinite linear alternate-reverse;
  }

  &::after {
    left: $offset;
    animation: noise-anim-1 2s infinite linear alternate-reverse;
  }
  @for $i from 1 through 2 {
    @keyframes noise-anim-#{$i} {
      @for $i from 0 through $steps {
        $top: random(100);
        $bottom: random(101 - $top);
        #{percentage($i*calc(1/$steps))} {
          clip-path: inset($top * 1% 0 $bottom * 1% 0);
          // text-shadow: (random(20)-10 + px)
          //   (random(20)-10 + px)
          //   (random(40) + px)
          //   rgba(255, 255, 255, 0.8);
        }
      }
    }
  }
}

@mixin noiseZoom() {
  animation: noise-zoom 1s infinite linear alternate-reverse;

  @keyframes noise-zoom {
    0% {
      transform: scale(1 - calc(random(10) / 100));
    }
    10% {
      transform: scale(1 - calc(random(3) / 100));
    }
    20% {
      transform: scale(1 - calc(random(3) / 100)) skew(-(random(10)-5) + deg, 0);
    }
    30% {
      transform: scale(1 - calc(random(3) / 100));
    }
    40% {
      transform: scale(1 - calc(random(3) / 100));
    }
    50% {
      transform: scale(1 - calc(random(3) / 100));
    }
    60% {
      transform: scale(1 - calc(random(3) / 100));
    }
    70% {
      transform: scale(1 - calc(random(3) / 100));
    }
    80% {
      transform: scale(1 - calc(random(3) / 100));
      transform: scale(1 - calc(random(3) / 100)) skew(-random(10) + deg, 0);
    }
    90% {
      transform: scale(1 - calc(random(3) / 100));
    }
  }
}
